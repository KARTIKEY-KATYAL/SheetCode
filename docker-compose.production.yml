version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: sheetcode-postgres
    restart: always
    environment:
      POSTGRES_USER: sheetcode_user
      POSTGRES_PASSWORD: SecurePass123!
      POSTGRES_DB: sheetcode_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - sheetcode
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sheetcode_user -d sheetcode_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Judge0
  redis:
    image: redis:7-alpine
    container_name: sheetcode-redis
    restart: always
    command: redis-server --requirepass RedisPass123!
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sheetcode
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Judge0 Service
  judge0:
    image: judge0/judge0:1.13.0
    container_name: sheetcode-judge0
    restart: always
    privileged: true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=RedisPass123!
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=sheetcode_user
      - POSTGRES_PASSWORD=SecurePass123!
      - POSTGRES_DB=sheetcode_db
      - ENABLE_WAIT_RESULT=true
      - MAX_CPU_TIME_LIMIT=15
      - MAX_MEMORY_LIMIT=1024000
      - MAX_QUEUE_SIZE=200
      - MAX_PROCESSES_AND_THREADS=100
    ports:
      - "2358:2358"
    networks:
      - sheetcode
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2358/system_info"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: sheetcode-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      judge0:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=8080
      - DATABASE_URL=postgresql://sheetcode_user:SecurePass123!@postgres:5432/sheetcode_db
      - JWT_SECRET=eb8143481e73cca624142ed820743e4a2bd24de84a0922cf351f4e9ca0c45695
      - FRONTEND_URL=https://sheetcode.in
      - CLOUDINARY_CLOUD_NAME=dm4mrjfyf
      - CLOUDINARY_API_KEY=563843211895523
      - CLOUDINARY_API_SECRET=cGzDqPukbFSyauOJBtc_tiKEaV4
      - JUDGE0_API_URL=http://judge0:2358
    ports:
      - "8080:8080"
    volumes:
      - backend_uploads:/app/uploads
    networks:
      - sheetcode
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  caddy:
      image: caddy:alpine
      container_name: sheetcode-caddy
      restart: always
      depends_on:
        - backend
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./Caddyfile:/etc/caddy/Caddyfile:ro
        - caddy_data:/data
        - caddy_config:/config
      networks:
        - sheetcode

networks:
  sheetcode:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:
  backend_uploads: